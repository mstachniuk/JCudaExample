	.version 1.4
	.target sm_11, map_f64_to_f32
	// compiled with C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v3.2\bin\/../open64/lib//be.exe
	// nvopencc 3.2 built on 2010-11-04

	//-----------------------------------------------------------
	// Compiling C:/Users/staszek/AppData/Local/Temp/tmpxft_000011f8_00000000-11_JCudaCharPointersTestKernel.cpp3.i (C:/Users/staszek/AppData/Local/Temp/ccBI#.a01128)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:sm_11, Endian:little, Pointer Size:64
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"C:/Users/staszek/AppData/Local/Temp/tmpxft_000011f8_00000000-10_JCudaCharPointersTestKernel.cudafe2.gpu"
	.file	2	"d:/Microsoft Visual Studio 9.0/VC/include/crtdefs.h"
	.file	3	"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v3.2\bin\/../include\crt/device_runtime.h"
	.file	4	"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v3.2\bin\/../include\host_defines.h"
	.file	5	"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v3.2\bin\/../include\builtin_types.h"
	.file	6	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\device_types.h"
	.file	7	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\driver_types.h"
	.file	8	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\surface_types.h"
	.file	9	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\texture_types.h"
	.file	10	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\vector_types.h"
	.file	11	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\builtin_types.h"
	.file	12	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\host_defines.h"
	.file	13	"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v3.2\bin\/../include\device_launch_parameters.h"
	.file	14	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\crt\storage_class.h"
	.file	15	"d:/Microsoft Visual Studio 9.0/VC/include/time.h"
	.file	16	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\texture_fetch_functions.h"
	.file	17	"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v3.2\bin\/../include\common_functions.h"
	.file	18	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\math_functions.h"
	.file	19	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\math_constants.h"
	.file	20	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\device_functions.h"
	.file	21	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\sm_11_atomic_functions.h"
	.file	22	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\sm_12_atomic_functions.h"
	.file	23	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\sm_13_double_functions.h"
	.file	24	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\sm_20_atomic_functions.h"
	.file	25	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\sm_20_intrinsics.h"
	.file	26	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\surface_functions.h"
	.file	27	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\math_functions_dbl_ptx1.h"
	.file	28	"JCudaCharPointersTestKernel.cu"


	.entry sampleKernel (
		.param .s32 __cudaparm_sampleKernel_someSize,
		.param .u64 __cudaparm_sampleKernel_globalInputData,
		.param .s32 __cudaparm_sampleKernel_size,
		.param .u64 __cudaparm_sampleKernel_globalOutputData)
	{
	.reg .u32 %r<8>;
	.reg .u64 %rd<12>;
	.reg .f32 %f<5>;
	.reg .pred %p<4>;
	.loc	28	2	0
$LDWbegin_sampleKernel:
	.loc	28	5	0
	cvt.u32.u16 	%r1, %tid.x;
	cvt.u64.u32 	%rd1, %r1;
	ld.param.u64 	%rd2, [__cudaparm_sampleKernel_globalOutputData];
	mul.wide.u32 	%rd3, %r1, 4;
	add.u64 	%rd4, %rd2, %rd3;
	mov.f32 	%f1, 0f00000000;     	// 0
	mov.f32 	%f2, 0f00000000;     	// 0
	st.global.f32 	[%rd4+0], %f2;
	ld.param.s32 	%r2, [__cudaparm_sampleKernel_size];
	mov.u32 	%r3, 0;
	setp.le.s32 	%p1, %r2, %r3;
	@%p1 bra 	$Lt_0_1282;
	ld.param.s32 	%r2, [__cudaparm_sampleKernel_size];
	mov.s32 	%r4, %r2;
	mov.s64 	%rd5, 0;
	ld.param.u64 	%rd6, [__cudaparm_sampleKernel_globalInputData];
	mul.lo.u64 	%rd7, %rd1, 8;
	add.u64 	%rd8, %rd6, %rd7;
	mov.s32 	%r5, 0;
	mov.s32 	%r6, %r4;
$Lt_0_1794:
 //<loop> Loop body line 5, nesting depth: 1, estimated iterations: unknown
	.loc	28	8	0
	ld.global.u64 	%rd9, [%rd8+0];
	add.u64 	%rd10, %rd9, %rd5;
	ld.global.f32 	%f3, [%rd10+0];
	add.f32 	%f1, %f3, %f1;
	st.global.f32 	[%rd4+0], %f1;
	add.s32 	%r5, %r5, 1;
	add.u64 	%rd5, %rd5, 4;
	.loc	28	5	0
	ld.param.s32 	%r2, [__cudaparm_sampleKernel_size];
	.loc	28	8	0
	setp.ne.s32 	%p2, %r2, %r5;
	@%p2 bra 	$Lt_0_1794;
$Lt_0_1282:
	.loc	28	11	0
	exit;
$LDWend_sampleKernel:
	} // sampleKernel

